package cs492finalproject;

import cs492finalproject.Interfaces.LogInterface;
import cs492finalproject.IDS.PacketCapture;
import cs492finalproject.Utils.BoundsPopupMenuListener;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

import org.jnetpcap.Pcap;
import org.jnetpcap.PcapIf;

/**
 *
 * @author JBristol
 */
public class MainFrame extends javax.swing.JFrame implements LogInterface {

  private final List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs  
  private final StringBuilder errbuf = new StringBuilder(); // For any error msgs
  private PacketCapture tPCAP;
  private Pcap pcap;
  private int userVal;
  private int numPackets;

  public MainFrame() {
    initComponents();
  }

  @Override
  public void appendLog(JTextPane log, String message, Color txtColor) {
    StyledDocument doc = log.getStyledDocument();
    SimpleAttributeSet aset = new SimpleAttributeSet();
    StyleConstants.setForeground(aset, txtColor);
    try {
      if (doc.getLength() == 0) {
        log.getDocument().insertString(0, message, aset);
      } else {
        log.getDocument().insertString(doc.getLength(), message, aset);
      }
    } catch (BadLocationException e) {
      // Fail Silently
    }
    log.setCaretPosition(doc.getLength());
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    tbStatusBar = new javax.swing.JToolBar();
    lblStatus = new javax.swing.JLabel();
    filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
    pbarProgress = new javax.swing.JProgressBar();
    filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(10, 32767));
    tabpaneMain = new javax.swing.JTabbedPane();
    panelCapturing = new javax.swing.JPanel();
    lblDevice = new javax.swing.JLabel();
    cboxDevice = new javax.swing.JComboBox();
    btnScan = new javax.swing.JButton();
    lblPacketNumber = new javax.swing.JLabel();
    spinPacketNumber = new javax.swing.JSpinner();
    tbtnCapture = new javax.swing.JToggleButton();
    panelPHA = new javax.swing.JPanel();
    panelPHA_2 = new javax.swing.JPanel();
    txtOutgoing = new javax.swing.JTextField();
    lblOutgoing = new javax.swing.JLabel();
    txtSYN2 = new javax.swing.JTextField();
    lblSYN2 = new javax.swing.JLabel();
    txtIncoming = new javax.swing.JTextField();
    lblIncoming = new javax.swing.JLabel();
    lblSYN1 = new javax.swing.JLabel();
    txtSYN1 = new javax.swing.JTextField();
    lblSYNACK2 = new javax.swing.JLabel();
    txtSYNACK2 = new javax.swing.JTextField();
    lblRST = new javax.swing.JLabel();
    txtRST = new javax.swing.JTextField();
    lblSYNACK1 = new javax.swing.JLabel();
    txtSYNACK1 = new javax.swing.JTextField();
    lblFIN1 = new javax.swing.JLabel();
    txtFIN1 = new javax.swing.JTextField();
    lblFIN2 = new javax.swing.JLabel();
    txtFIN2 = new javax.swing.JTextField();
    lblTotal = new javax.swing.JLabel();
    txtTotal = new javax.swing.JTextField();
    panelPHA_1 = new javax.swing.JPanel();
    lblSYN_oSYNACK = new javax.swing.JLabel();
    p1 = new javax.swing.JTextField();
    lblRST_total_ack = new javax.swing.JLabel();
    p2 = new javax.swing.JTextField();
    lblSYN_max = new javax.swing.JLabel();
    p3 = new javax.swing.JTextField();
    panelPHA_3 = new javax.swing.JPanel();
    lblSYN_s_n = new javax.swing.JLabel();
    txtSynN = new javax.swing.JTextField();
    lblFIN_s_n = new javax.swing.JLabel();
    txtFinN = new javax.swing.JTextField();
    txtAlert = new javax.swing.JTextField();
    spLog = new javax.swing.JScrollPane();
    txtaLog = new javax.swing.JTextPane();
    mbarMain = new javax.swing.JMenuBar();
    menuFile = new javax.swing.JMenu();
    menuItemExit = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("CS 492 - Host-Based Intrusion Detection System");
    setMinimumSize(new java.awt.Dimension(750, 500));
    setName("frameMaine"); // NOI18N

    tbStatusBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    tbStatusBar.setFloatable(false);
    tbStatusBar.setRollover(true);

    lblStatus.setForeground(new java.awt.Color(50, 148, 44));
    lblStatus.setText("Ready");
    tbStatusBar.add(lblStatus);
    tbStatusBar.add(filler2);

    pbarProgress.setBorderPainted(false);
    pbarProgress.setDoubleBuffered(true);
    pbarProgress.setMinimumSize(new java.awt.Dimension(146, 14));
    tbStatusBar.add(pbarProgress);
    pbarProgress.setVisible(false);
    tbStatusBar.add(filler1);

    tabpaneMain.setTabPlacement(javax.swing.JTabbedPane.LEFT);
    tabpaneMain.setDoubleBuffered(true);

    lblDevice.setText("Hardware Device:");

    BoundsPopupMenuListener listener = new BoundsPopupMenuListener(true, false);

    cboxDevice.addPopupMenuListener (listener );
    cboxDevice.setPrototypeDisplayValue ("ItemWWW");

    btnScan.setText("Scan for Devices");
    btnScan.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnScanActionPerformed(evt);
      }
    });

    lblPacketNumber.setText("# of Packets (0 for infinity):");

    spinPacketNumber.setEditor(new javax.swing.JSpinner.NumberEditor(spinPacketNumber, ""));
    spinPacketNumber.setModel(new SpinnerNumberModel(0, 0, 1000, 1));

    tbtnCapture.setText("Packet Capture OFF");
    tbtnCapture.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        tbtnCaptureStateChanged(evt);
      }
    });
    tbtnCapture.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tbtnCaptureActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout panelCapturingLayout = new javax.swing.GroupLayout(panelCapturing);
    panelCapturing.setLayout(panelCapturingLayout);
    panelCapturingLayout.setHorizontalGroup(
      panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelCapturingLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelCapturingLayout.createSequentialGroup()
            .addComponent(lblDevice)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cboxDevice, 0, 558, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnScan))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCapturingLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCapturingLayout.createSequentialGroup()
                .addComponent(lblPacketNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinPacketNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addComponent(tbtnCapture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap())
    );
    panelCapturingLayout.setVerticalGroup(
      panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelCapturingLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cboxDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDevice)
          .addComponent(btnScan))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
        .addGroup(panelCapturingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(spinPacketNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblPacketNumber))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tbtnCapture, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    tabpaneMain.addTab("Packet Capturing", panelCapturing);

    txtOutgoing.setEditable(false);
    txtOutgoing.setFocusable(false);

    lblOutgoing.setText("Outgoing");

    txtSYN2.setEditable(false);
    txtSYN2.setFocusable(false);

    lblSYN2.setText("SYN");

    txtIncoming.setEditable(false);
    txtIncoming.setFocusable(false);

    lblIncoming.setText("Incoming");

    lblSYN1.setText("SYN");

    txtSYN1.setEditable(false);
    txtSYN1.setFocusable(false);

    lblSYNACK2.setText("SYNACK");

    txtSYNACK2.setEditable(false);
    txtSYNACK2.setFocusable(false);

    lblRST.setText("RST");

    txtRST.setEditable(false);
    txtRST.setFocusable(false);

    lblSYNACK1.setText("SYNACK");

    txtSYNACK1.setEditable(false);
    txtSYNACK1.setFocusable(false);

    lblFIN1.setText("FIN");

    txtFIN1.setEditable(false);
    txtFIN1.setFocusable(false);

    lblFIN2.setText("FIN");

    txtFIN2.setEditable(false);
    txtFIN2.setFocusable(false);

    lblTotal.setText("Total");

    txtTotal.setEditable(false);
    txtTotal.setFocusable(false);

    javax.swing.GroupLayout panelPHA_2Layout = new javax.swing.GroupLayout(panelPHA_2);
    panelPHA_2.setLayout(panelPHA_2Layout);
    panelPHA_2Layout.setHorizontalGroup(
      panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_2Layout.createSequentialGroup()
        .addContainerGap(20, Short.MAX_VALUE)
        .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lblTotal)
          .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPHA_2Layout.createSequentialGroup()
              .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPHA_2Layout.createSequentialGroup()
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblIncoming, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtIncoming, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblSYN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtSYN1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblSYNACK1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtSYNACK1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblFIN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtFIN1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(panelPHA_2Layout.createSequentialGroup()
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblOutgoing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtOutgoing, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblSYN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtSYN2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblSYNACK2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtSYNACK2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblRST, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtRST, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(lblFIN2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(txtFIN2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
    );
    panelPHA_2Layout.setVerticalGroup(
      panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblIncoming)
          .addComponent(lblSYN1)
          .addComponent(lblSYNACK1)
          .addComponent(lblFIN1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(txtIncoming, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtSYN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtSYNACK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtFIN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblOutgoing)
          .addComponent(lblSYN2)
          .addComponent(lblSYNACK2)
          .addComponent(lblRST)
          .addComponent(lblFIN2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panelPHA_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(txtOutgoing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtSYN2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtSYNACK2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtRST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtFIN2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lblTotal)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    lblSYN_oSYNACK.setText("iSYN - oSYNACK:");

    p1.setEditable(false);
    p1.setFocusable(false);

    lblRST_total_ack.setText("RST / (Total - ACK):");

    p2.setEditable(false);
    p2.setFocusable(false);

    lblSYN_max.setText("SYN - Max(iFIN, oFIN):");

    p3.setEditable(false);
    p3.setFocusable(false);

    javax.swing.GroupLayout panelPHA_1Layout = new javax.swing.GroupLayout(panelPHA_1);
    panelPHA_1.setLayout(panelPHA_1Layout);
    panelPHA_1Layout.setHorizontalGroup(
      panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(panelPHA_1Layout.createSequentialGroup()
            .addComponent(lblRST_total_ack)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(panelPHA_1Layout.createSequentialGroup()
            .addComponent(lblSYN_oSYNACK)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(panelPHA_1Layout.createSequentialGroup()
            .addComponent(lblSYN_max)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    panelPHA_1Layout.setVerticalGroup(
      panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_1Layout.createSequentialGroup()
        .addGap(11, 11, 11)
        .addGroup(panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblSYN_oSYNACK)
          .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblRST_total_ack)
          .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panelPHA_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblSYN_max)
          .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(20, Short.MAX_VALUE))
    );

    lblSYN_s_n.setText("SYN Scan Normal:");

    txtSynN.setText("0.0");
    txtSynN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtSynNActionPerformed(evt);
      }
    });

    lblFIN_s_n.setText("FIN Scan Normal:");

    txtFinN.setText("0.0");
    txtFinN.setToolTipText("");
    txtFinN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtFinNActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout panelPHA_3Layout = new javax.swing.GroupLayout(panelPHA_3);
    panelPHA_3.setLayout(panelPHA_3Layout);
    panelPHA_3Layout.setHorizontalGroup(
      panelPHA_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHA_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(panelPHA_3Layout.createSequentialGroup()
            .addComponent(lblSYN_s_n)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtSynN, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(panelPHA_3Layout.createSequentialGroup()
            .addComponent(lblFIN_s_n)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtFinN, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    panelPHA_3Layout.setVerticalGroup(
      panelPHA_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelPHA_3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHA_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblSYN_s_n)
          .addComponent(txtSynN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panelPHA_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblFIN_s_n)
          .addComponent(txtFinN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    txtAlert.setEditable(false);
    txtAlert.setForeground(new java.awt.Color(255, 0, 0));
    txtAlert.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    txtAlert.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    txtAlert.setFocusable(false);

    javax.swing.GroupLayout panelPHALayout = new javax.swing.GroupLayout(panelPHA);
    panelPHA.setLayout(panelPHALayout);
    panelPHALayout.setHorizontalGroup(
      panelPHALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPHALayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelPHALayout.createSequentialGroup()
            .addComponent(panelPHA_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panelPHA_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addComponent(txtAlert))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panelPHA_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    panelPHALayout.setVerticalGroup(
      panelPHALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPHALayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelPHALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(panelPHA_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(panelPHALayout.createSequentialGroup()
            .addGroup(panelPHALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(panelPHA_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(panelPHA_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(txtAlert)))
        .addContainerGap())
    );

    tabpaneMain.addTab("Anomaly Detection", panelPHA);

    spLog.setAutoscrolls(true);

    txtaLog.setBackground(new java.awt.Color(204, 204, 255));
    txtaLog.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    txtaLog.setForeground(new java.awt.Color(51, 51, 51));
    txtaLog.setSelectionColor(new java.awt.Color(0, 153, 102));
    spLog.setViewportView(txtaLog);

    menuFile.setText("File");

    menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
    menuItemExit.setText("Exit");
    menuItemExit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuItemExitActionPerformed(evt);
      }
    });
    menuFile.add(menuItemExit);

    mbarMain.add(menuFile);

    setJMenuBar(mbarMain);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tbStatusBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
          .addComponent(tabpaneMain)
          .addComponent(spLog, javax.swing.GroupLayout.Alignment.TRAILING))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(tabpaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(spLog, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tbStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
      System.exit(0);
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void btnScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScanActionPerformed
      alldevs.clear(); //Clear the ArrayList first
      int r = Pcap.findAllDevs(alldevs, errbuf);
      if (r == Pcap.NOT_OK || alldevs.isEmpty()) {
        appendLog(txtaLog, "Can't read list of devices, error is " + errbuf.toString() + "\n", Color.RED);
        return;
      }

      appendLog(txtaLog, "Network devices found:\n", Color.DARK_GRAY);
      cboxDevice.removeAllItems(); //Clear the ComboBox first
      int i = 1;
      for (PcapIf device : alldevs) {
        try {
          String description
              = (device.getDescription() != null) ? device.getDescription() : "No description available";
          appendLog(txtaLog, "    " + i++ + "." + device.getName() + " [" + description + "]"
              + " [" + asString(device.getHardwareAddress()) + "] " + "\n", Color.DARK_GRAY);
          cboxDevice.addItem(description + " - [" + asString(device.getHardwareAddress()) + "]");
        } catch (IOException e) {
          // Fail silently, device doesn't have a hardware address
        }
      }

      PcapIf device = alldevs.get(0); // We know we have at least 1 device  
      appendLog(txtaLog, "\nChoosing "
          + ((device.getDescription() != null) ? device.getDescription()
          : device.getName()) + " on your behalf.\n", Color.BLUE);
    }//GEN-LAST:event_btnScanActionPerformed

    private void tbtnCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnCaptureActionPerformed

      this.userVal = Integer.parseInt(spinPacketNumber.getValue().toString());
      this.numPackets = (userVal == 0) ? Pcap.LOOP_INFINITE : userVal;
      JTextField[] packetFields = {txtTotal, txtIncoming, txtSYN1, txtSYNACK1, txtFIN1, txtOutgoing, txtSYN2, txtSYNACK2, txtRST,
        txtFIN2, p1, p2, p3, txtSynN, txtFinN, txtAlert};
      this.tPCAP = new PacketCapture(userVal, numPackets, tbtnCapture, txtaLog, pcap, cboxDevice, alldevs, errbuf, packetFields);
      Thread pcapThread = new Thread(tPCAP);
      pcapThread.start();
    }//GEN-LAST:event_tbtnCaptureActionPerformed

    private void tbtnCaptureStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbtnCaptureStateChanged
      tbtnCapture.setText((tbtnCapture.isSelected() ? "Packet Capture ON" : "Packet Capture OFF"));
      lblStatus.setText((tbtnCapture.isSelected() ? "Capturing Packets..." : "Ready"));
      lblStatus.setForeground((tbtnCapture.isSelected() ? new Color(150, 100, 0) : new Color(0, 150, 0)));
      pbarProgress.setVisible(tbtnCapture.isSelected());
      pbarProgress.setIndeterminate(tbtnCapture.isSelected());
      if (tPCAP != null) {
        tPCAP.setCapturing(tbtnCapture.isSelected());
      }
    }//GEN-LAST:event_tbtnCaptureStateChanged

  private void txtSynNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSynNActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_txtSynNActionPerformed

  private void txtFinNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFinNActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_txtFinNActionPerformed

  private static String asString(final byte[] mac) {
    final StringBuilder buf = new StringBuilder();
    for (byte b : mac) {
      if (buf.length() != 0) {
        buf.append(':');
      }
      if (b >= 0 && b < 16) {
        buf.append('0');
      }
      buf.append(Integer.toHexString((b < 0) ? b + 256 : b).toUpperCase());
    }

    return buf.toString();
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;

        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class
          .getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class
          .getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class
          .getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class
          .getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new MainFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnScan;
  private javax.swing.JComboBox cboxDevice;
  private javax.swing.Box.Filler filler1;
  private javax.swing.Box.Filler filler2;
  private javax.swing.JLabel lblDevice;
  private javax.swing.JLabel lblFIN1;
  private javax.swing.JLabel lblFIN2;
  private javax.swing.JLabel lblFIN_s_n;
  private javax.swing.JLabel lblIncoming;
  private javax.swing.JLabel lblOutgoing;
  private javax.swing.JLabel lblPacketNumber;
  private javax.swing.JLabel lblRST;
  private javax.swing.JLabel lblRST_total_ack;
  private javax.swing.JLabel lblSYN1;
  private javax.swing.JLabel lblSYN2;
  private javax.swing.JLabel lblSYNACK1;
  private javax.swing.JLabel lblSYNACK2;
  private javax.swing.JLabel lblSYN_max;
  private javax.swing.JLabel lblSYN_oSYNACK;
  private javax.swing.JLabel lblSYN_s_n;
  private javax.swing.JLabel lblStatus;
  private javax.swing.JLabel lblTotal;
  private javax.swing.JMenuBar mbarMain;
  private javax.swing.JMenu menuFile;
  private javax.swing.JMenuItem menuItemExit;
  private javax.swing.JTextField p1;
  private javax.swing.JTextField p2;
  private javax.swing.JTextField p3;
  private javax.swing.JPanel panelCapturing;
  private javax.swing.JPanel panelPHA;
  private javax.swing.JPanel panelPHA_1;
  private javax.swing.JPanel panelPHA_2;
  private javax.swing.JPanel panelPHA_3;
  private javax.swing.JProgressBar pbarProgress;
  private javax.swing.JScrollPane spLog;
  private javax.swing.JSpinner spinPacketNumber;
  private javax.swing.JTabbedPane tabpaneMain;
  private javax.swing.JToolBar tbStatusBar;
  private javax.swing.JToggleButton tbtnCapture;
  private javax.swing.JTextField txtAlert;
  private javax.swing.JTextField txtFIN1;
  private javax.swing.JTextField txtFIN2;
  private javax.swing.JTextField txtFinN;
  private javax.swing.JTextField txtIncoming;
  private javax.swing.JTextField txtOutgoing;
  private javax.swing.JTextField txtRST;
  private javax.swing.JTextField txtSYN1;
  private javax.swing.JTextField txtSYN2;
  private javax.swing.JTextField txtSYNACK1;
  private javax.swing.JTextField txtSYNACK2;
  private javax.swing.JTextField txtSynN;
  private javax.swing.JTextField txtTotal;
  private javax.swing.JTextPane txtaLog;
  // End of variables declaration//GEN-END:variables
}
